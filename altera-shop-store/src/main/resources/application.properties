quarkus.banner.path=banner.txt
quarkus.http.port=8080
quarkus.container-image.group=quarkus-mp
quarkus.container-image.name=altera-shop-store
quarkus.kubernetes.name=altera-shop-store
quarkus.http.cors=true
## Datasource ##
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=postgres
quarkus.datasource.password=password
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost/icecreamshopdb
quarkus.hibernate-orm.database.generation=drop-and-create
# logging #
quarkus.log.level=INFO
quarkus.log.console.enable=true
quarkus.log.console.format="%d{HH:mm:ss} %-5p traceId=%X{traceId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n"
quarkus.log.console.level=DEBUG
quarkus.log.console.color:false
quarkus.log.category."org.hibernate".level=WARN
quarkus.log.category."io.quarkus".level=INFO
quarkus.log.category."org.apache.kafka".level=ERROR
quarkus.log.handler.gelf.enabled=true
quarkus.log.handler.gelf.host=localhost
quarkus.log.handler.gelf.port=12201
# Monitoring #
jeager.service-name=icrecream-shop
jeager.sampler-type=const
jeager.sampler-param=1
quarkus.native.native-image-xmx=4g
net.juankprada.orders.proxy.InventoryProxy/mp-rest/url=${INVENTORY_URL:http://localhost:8081}
#Kafka Messages
mp.messaging.outgoing.order-placed.connector=smallrye-kafka
mp.messaging.outgoing.order-placed.topic=order-placed
mp.messaging.outgoing.order-placed.valueserializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
### test configuration ####
%test.quarkus.datasource.db-kind=postgresql
%test.quarkus.datasource.username=user
%test.quarkus.datasource.password=password
%test.quarkus.datasource.jdbc.url=jdbc:tc:postgresql:latest:///icecreamshopdb
%test.quarkus.datasource.jdbc.driver=org.testcontainers.jdbc.ContainerDatabaseDriver
%test.quarkus.hibernate-orm.database.generation=drop-and-create
%test.quarkus.log.handler.gelf.enabled=false
quarkus.http.test-port=8084
quarkus.http.test-ssl-port=8446
